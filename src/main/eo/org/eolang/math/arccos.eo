# The MIT License (MIT)
#
# Copyright (c) 2021-2022 Max Trunnikov
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.math.angle
+alias org.eolang.math.nan
+alias org.eolang.math.number
+alias org.eolang.math.pi
+home https://github.com/objectionary/eo-math
+package org.eolang.math
+rt jvm org.eolang:eo-math:0.0.0
+version 0.0.0

# Arccosinus of a value
[val] > arccos
  [x] > binary-method
    memory > low
      0.0
    memory > high
      pi
    memory > mid
      0.0
    memory > cosmid
      0.0
    0.000000001 > precision!
    memory > running
      TRUE
    seq > @
      while.
        running
        [i]
          seq > @
            mid.write
              div.
                plus.
                  low
                  high
                2.0
            cosmid.write
              number
                angle mid
                .cos
              .as-float
            if.
              gt.
                abs.
                  seq
                    minus. > val
                      cosmid
                      x
                    number val
                precision
              if.
                gt.
                  cosmid
                  x
                low.write
                  mid
                high.write
                  mid
              running.write
                FALSE
      mid

  if. > @
    or.
      gt.
        val
        1.0
      lt.
        val
        -1.0
    nan
    if.
      eq.
        val
        -1.0
      pi
      if.
        eq.
          val
          0.0
        div.
          pi
          2.0
        if.
          eq.
            val
            1.0
          0.0
          binary-method
            val
